parameters:
  - name: mode
    displayName: 'Which template to use ?'
    type: string
    default: jmeter

  - name: linux_pool
    type: string
    default: microsoft_hosted

  - name: crux_templates
    type: string
    default: pipelines/azure/templates

  - name: CUSTOM_crux_templates
    type: string
    default: path/to/jmeter/config/custom

  - name: crux_job_timeout
    type: string
    default: 60

  - name: step_timeout
    type: string
    default: 2

  - name: kubernetes_service_connection #used on compile time
    default: _

  - name: arm_service_connection #used on compile time
    default: _

jobs:
  - job: Jmeter
    timeoutInMinutes: ${{ parameters.crux_job_timeout }}
    displayName: JMeter pipeline
    #choose pool
    ${{ if eq(parameters.linux_pool, 'microsoft_hosted') }}:
      pool:
        vmImage: 'ubuntu-latest'
    ${{ if ne(parameters.linux_pool, 'microsoft_hosted') }}:
      pool: ${{ parameters.linux_pool }}

    #load up default CRUX variables
    condition: not(eq(variables['jmeter_tests'], false))
    variables:
    - template: ${{ parameters.crux_templates }}/default.variables.yaml@crux
      parameters:
        mode: ${{ parameters.mode }}

    steps:
    #Validation
      - ${{ if ne(parameters.mode, 'skipValidation') }}:
          - template: ${{ parameters.crux_templates }}/steps/step.validate_configuration.yaml@crux
            parameters:
              - mode: {{ parameters.mode}}
      - ${{ if ne('skipValidation', 'skipValidation') }}:
        - bash: |
            check_arm_connection=false
            check_k8_connection=false
            check_dockerhub_connection=false
            link="https://github.com/ObjectivityLtd/crux/wiki/CRUX-pipeline-requirements"

            echo "You have chosen to run CRUX in '${{ parameters.mode}}' mode."
            if [ "${{ parameters.mode}}" == 'jmeter' ];then
              check_k8_connection=true
            elif [ "${{ parameters.mode}}" == 'jmeter_dynamic' ];then
              check_arm_connection=true
            elif [ "${{ parameters.mode}}" == 'jmeter_with_dynamic_pools' ];then
              check_arm_connection=true
              check_k8_connection=true
            elif [ "${{ parameters.mode}}" == 'tests' ];then
              check_dockerhub_connection=true
            else
              echo "##[error] Unrecognized mode. Use one of jmeter|jmeter_dynamic|tests. [$link]"
              echo "##vso[task.complete result=Failed]current operation"
            fi

            if [ "$check_arm_connection" == "true" ];then
                if [ "$(armServiceConnection)" == "_" ];then
                  message="ARM Connection is set to default '$(armServiceConnection)'. Please create a correct ARM Connection to your resource group and update your pipeline."
                  echo "##vso[task.logissue type=error]$message [$link]"
                  exit 1
                else
                  echo "##[command] OK"
                fi
            fi

            if [ "$check_k8_connection" == "true" ];then
                if [ "$(kubernetesServiceConnection)" == "_" ];then
                  message="Kubernetes Service Connection is set to default '$(kubernetesServiceConnection)'. Please create a correct connection to your cluster and update your pipeline."
                  echo "##vso[task.logissue type=error]$message [$link]"
                  exit 1
                else
                  echo "##[command] OK"
                fi
            fi
          displayName: Pipeline Configuration Requirements Check

    #STATIC mode without node pool creation
      - ${{ if and(eq(parameters.mode, 'jmeter'),ne(parameters.kubernetes_service_connection,'_')) }}:
          - template: ${{ parameters.crux_templates }}/steps/step.crux_clone.yaml@crux
          - template: ${{ parameters.crux_templates }}/steps/step.tests_clone.yaml@crux
          - template: ${{ parameters.crux_templates }}/steps/step.prepare_tests.yaml@crux
          - template: ${{ parameters.CUSTOM_crux_templates }}/steps/step.download_secret_file.yaml
          - template: ${{ parameters.crux_templates }}/steps/step.configure_cluster.yaml@crux
          - template: ${{ parameters.crux_templates }}/steps/step.create_namespace.yaml@crux
          - template: ${{ parameters.crux_templates }}/steps/step.deploy_to_cluster.yaml@crux
          - template: ${{ parameters.crux_templates }}/steps/step.jmeter_tests.yaml@crux
          - template: ${{ parameters.crux_templates }}/steps/step.workbooks_upload.yaml@crux
          - template: ${{ parameters.crux_templates }}/steps/step.archive_jmeter_report.yaml@crux
          - template: ${{ parameters.crux_templates }}/steps/step.archive_jmeter_results.yaml@crux
          - template: ${{ parameters.crux_templates }}/steps/step.archive_jmeter_log.yaml@crux
          - template: ${{ parameters.crux_templates }}/steps/step.archive_jmeter_errors.yaml@crux
          - template: ${{ parameters.crux_templates }}/steps/step.archive_jmeter_server_logs.yaml@crux
          - template: ${{ parameters.crux_templates }}/steps/step.junit.yaml@crux
          - template: ${{ parameters.crux_templates }}/steps/step.junit_publish.yaml@crux
          - template: ${{ parameters.crux_templates }}/steps/step.delete_namespace.yaml@crux

      - ${{ if and(eq(parameters.mode, 'jmeter_with_dynamic_pools'),ne(parameters.kubernetes_service_connection,'_'),ne(parameters.arm_service_connection,'_')) }}:
          - template: ${{ parameters.crux_templates }}/steps/step.crux_clone.yaml@crux
          - template: ${{ parameters.crux_templates }}/steps/step.tests_clone.yaml@crux
          - template: ${{ parameters.crux_templates }}/steps/step.prepare_tests.yaml@crux
          - template: ${{ parameters.CUSTOM_crux_templates }}/steps/step.download_secret_file.yaml
          - template: ${{ parameters.CUSTOM_crux_templates }}/steps/step.override_deployment_rules.yaml
          - template: ${{ parameters.CUSTOM_crux_templates }}/steps/step.create_nodepool.yaml
          - template: ${{ parameters.crux_templates }}/steps/step.configure_cluster.yaml@crux
          - template: ${{ parameters.crux_templates }}/steps/step.create_namespace.yaml@crux
          - template: ${{ parameters.crux_templates }}/steps/step.deploy_to_cluster.yaml@crux
          - template: ${{ parameters.crux_templates }}/steps/step.jmeter_tests.yaml@crux
          - template: ${{ parameters.crux_templates }}/steps/step.workbooks_upload.yaml@crux
          - template: ${{ parameters.crux_templates }}/steps/step.archive_jmeter_report.yaml@crux
          - template: ${{ parameters.crux_templates }}/steps/step.archive_jmeter_results.yaml@crux
          - template: ${{ parameters.crux_templates }}/steps/step.archive_jmeter_log.yaml@crux
          - template: ${{ parameters.crux_templates }}/steps/step.archive_jmeter_errors.yaml@crux
          - template: ${{ parameters.crux_templates }}/steps/step.archive_jmeter_server_logs.yaml@crux
          - template: ${{ parameters.crux_templates }}/steps/step.junit.yaml@crux
          - template: ${{ parameters.crux_templates }}/steps/step.junit_publish.yaml@crux
          - template: ${{ parameters.crux_templates }}/steps/step.delete_namespace.yaml@crux
          - template: ${{ parameters.CUSTOM_crux_templates }}/steps/step.delete_nodepool.yaml

      - ${{ if and(eq(parameters.mode, 'jmeter_dynamic'),ne(parameters.arm_service_connection,'_')) }}:
          - template: ${{ parameters.crux_templates }}/steps/step.crux_clone.yaml@crux
          - template: ${{ parameters.crux_templates }}/steps/step.tests_clone.yaml@crux
          - template: ${{ parameters.crux_templates }}/steps/step.prepare_tests.yaml@crux
          - template: ${{ parameters.CUSTOM_crux_templates }}/steps/step.download_secret_file.yaml
          - template: ${{ parameters.CUSTOM_crux_templates }}/steps/step.override_deployment_rules.yaml
          - template: ${{ parameters.crux_templates }}/steps/step.create_cluster.yaml@crux
            parameters:
              timeoutInMinutes: 7
          - template: ${{ parameters.CUSTOM_crux_templates }}/steps/step.create_nodepool.yaml
          - template: ${{ parameters.crux_templates }}/steps/step.create_namespace.yaml@crux
          - template: ${{ parameters.crux_templates }}/steps/step.deploy_to_cluster.yaml@crux
          - template: ${{ parameters.crux_templates }}/steps/step.jmeter_tests.yaml@crux
          - template: ${{ parameters.crux_templates }}/steps/step.workbooks_upload.yaml@crux
          - template: ${{ parameters.crux_templates }}/steps/step.archive_jmeter_report.yaml@crux
          - template: ${{ parameters.crux_templates }}/steps/step.archive_jmeter_results.yaml@crux
          - template: ${{ parameters.crux_templates }}/steps/step.archive_jmeter_log.yaml@crux
          - template: ${{ parameters.crux_templates }}/steps/step.archive_jmeter_errors.yaml@crux
          - template: ${{ parameters.crux_templates }}/steps/step.archive_jmeter_server_logs.yaml@crux
          - template: ${{ parameters.crux_templates }}/steps/step.junit.yaml@crux
          - template: ${{ parameters.crux_templates }}/steps/step.junit_publish.yaml@crux
          - template: ${{ parameters.crux_templates }}/steps/step.delete_namespace.yaml@crux
          - template: ${{ parameters.CUSTOM_crux_templates }}/steps/step.delete_nodepool.yaml
          - template: ${{ parameters.crux_templates }}/steps/step.delete_cluster.yaml@crux


          #RUN on framework tests
      - ${{ if eq(parameters.mode, 'tests') }}:
        - template: ${{ parameters.crux_templates }}/mocks/step.crux_clone.yaml@crux
        - template: ${{ parameters.crux_templates }}/mocks/step.tests_clone.yaml@crux
        - template: ${{ parameters.crux_templates }}/mocks/step.prepare_tests.yaml@crux
        - template: ${{ parameters.crux_templates }}/mocks/step.create_cluster.yaml@crux
        - template: ${{ parameters.crux_templates }}/mocks/step.configure_cluster.yaml@crux
        - template: ${{ parameters.crux_templates }}/mocks/step.create_namespace.yaml@crux
        - template: ${{ parameters.crux_templates }}/mocks/step.deploy_to_cluster.yaml@crux
        - template: ${{ parameters.crux_templates }}/mocks/step.jmeter_tests.yaml@crux
        - template: ${{ parameters.crux_templates }}/mocks/step.workbooks_upload.yaml@crux
        - template: ${{ parameters.crux_templates }}/mocks/step.archive_jmeter_report.yaml@crux
        - template: ${{ parameters.crux_templates }}/mocks/step.archive_jmeter_results.yaml@crux
        - template: ${{ parameters.crux_templates }}/mocks/step.archive_jmeter_log.yaml@crux
        - template: ${{ parameters.crux_templates }}/mocks/step.archive_jmeter_errors.yaml@crux
        - template: ${{ parameters.crux_templates }}/mocks/step.archive_jmeter_server_logs.yaml@crux
        - template: ${{ parameters.crux_templates }}/mocks/step.junit.yaml@crux
        - template: ${{ parameters.crux_templates }}/mocks/step.junit_publish.yaml@crux
        - template: ${{ parameters.crux_templates }}/mocks/step.delete_namespace.yaml@crux
        - template: ${{ parameters.crux_templates }}/mocks/step.delete_cluster.yaml@crux

  #RUN on framework tests
  - ${{ if eq(parameters.mode, 'tests') }}:
    - template: ${{ parameters.crux_templates }}/tests/jobs/run_bats_modules_tests.yaml@crux
    - template: ${{ parameters.crux_templates }}/tests/jobs/run_pester_modules_tests.yaml@crux
    - template: ${{ parameters.crux_templates }}/tests/jobs/test_docker_images.yaml@crux
    - template: ${{ parameters.crux_templates }}/build/jobs/build_and_push_docker.yaml@crux
