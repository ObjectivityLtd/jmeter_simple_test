parameters:
  - name: mode
    displayName: 'Which template to use ?'
    type: string
    default: jmeter

  - name: linux_pool
    type: string
    default: microsoft_hosted

  - name: crux_templates
    type: string
    default: pipelines/azure/templates

  - name: crux_job_timeout
    type: string
    default: 60

  - name: step_timeout
    type: string
    default: 2

  - name: armServiceConnection
    type: string
    default: _

jobs:
  - job: Jmeter
    timeoutInMinutes: ${{ parameters.crux_job_timeout }}
    displayName: JMeter pipeline
    #choose pool
    ${{ if eq(parameters.linux_pool, 'microsoft_hosted') }}:
      pool:
        vmImage: 'ubuntu-latest'
    ${{ if ne(parameters.linux_pool, 'microsoft_hosted') }}:
      pool: ${{ parameters.linux_pool }}

    #load up default CRUX variables
    condition: not(eq(variables['jmeter_tests'], false))
    variables:
    - template: ${{ parameters.crux_templates }}/default.variables.yaml@crux
      parameters:
        mode: ${{ parameters.mode }}

    steps:
    #Validation
     # - ${{ if and(eq(parameters.mode, 'jmeter_dynamic'), parameters.arm_connection) }}:
        displayName: Pipeline Configuration Requirements Check
        bash: |
          if [ "$(armServiceConnection)" == "_" ];then
              echo "ARM Connection is set to default '$(armServiceConnection)'. Please create a correct ARM connection to yoru resource group and update your pipeline. FAIL "
          else
              echo "ARM Connection is set to $(armServiceConnection). PASS "
          fi
          echo "##vso[task.complete result=Succeeded;]DONE"
          echo "##vso[task.complete result=Succeeded;]DONE"

          echo "ARM service connection: $(armServiceConnection)"
          echo "K8 service connection: $(kubernetesServiceConnection)"
          echo "Mode: ${{ parameters.mode}}"

    #DYNAMIC
      - ${{ if and(ne(parameters.mode, 'tests'),ne(parameters.armServiceConnection,'_')) }}:
        - template: ${{ parameters.crux_templates }}/steps/step.crux_clone.yaml@crux
          parameters:
            timeoutInMinutes: ${{ parameters.step_timeout }}
        - template: ${{ parameters.crux_templates }}/steps/step.tests_clone.yaml@crux
          parameters:
            timeoutInMinutes: ${{ parameters.step_timeout }}
        - template: ${{ parameters.crux_templates }}/steps/step.prepare_tests.yaml@crux
        - template: path/to/jmeter/config/custom/steps/step.download_secret_file.yaml
        - template: path/to/jmeter/config/custom/steps/step.override_deployment_rules.yaml
        - template: ${{ parameters.crux_templates }}/steps/step.create_cluster.yaml@crux
        - template: path/to/jmeter/config/custom/steps/step.create_nodepool.yaml
          parameters:
           mode: ${{ parameters.mode }}
        - template: ${{ parameters.crux_templates }}/steps/step.configure_cluster.yaml@crux
        - template: ${{ parameters.crux_templates }}/steps/step.create_namespace.yaml@crux
        - template: ${{ parameters.crux_templates }}/steps/step.deploy_to_cluster.yaml@crux
          parameters:
            timeoutInMinutes: 4
        - template: ${{ parameters.crux_templates }}/steps/step.jmeter_tests.yaml@crux
        - template: ${{ parameters.crux_templates }}/steps/step.workbooks_upload.yaml@crux
        - template: ${{ parameters.crux_templates }}/steps/step.archive_jmeter_report.yaml@crux
        - template: ${{ parameters.crux_templates }}/steps/step.archive_jmeter_results.yaml@crux
        - template: ${{ parameters.crux_templates }}/steps/step.archive_jmeter_log.yaml@crux
        - template: ${{ parameters.crux_templates }}/steps/step.archive_jmeter_errors.yaml@crux
        - template: ${{ parameters.crux_templates }}/steps/step.archive_jmeter_server_logs.yaml@crux
        - template: ${{ parameters.crux_templates }}/steps/step.junit.yaml@crux
        - template: ${{ parameters.crux_templates }}/steps/step.junit_publish.yaml@crux
        - template: ${{ parameters.crux_templates }}/steps/step.delete_namespace.yaml@crux
        - template: path/to/jmeter/config/custom/steps/step.delete_nodepool.yaml
          parameters:
            mode: ${{ parameters.mode }}
        - template: ${{ parameters.crux_templates }}/steps/step.delete_cluster.yaml@crux


      #RUN on framework tests
      - ${{ if eq(parameters.mode, 'tests') }}:
        - template: ${{ parameters.crux_templates }}/mocks/step.crux_clone.yaml@crux
        - template: ${{ parameters.crux_templates }}/mocks/step.tests_clone.yaml@crux
        - template: ${{ parameters.crux_templates }}/mocks/step.prepare_tests.yaml@crux
        - template: ${{ parameters.crux_templates }}/mocks/step.create_cluster.yaml@crux
        - template: ${{ parameters.crux_templates }}/mocks/step.configure_cluster.yaml@crux
        - template: ${{ parameters.crux_templates }}/mocks/step.create_namespace.yaml@crux
        - template: ${{ parameters.crux_templates }}/mocks/step.deploy_to_cluster.yaml@crux
        - template: ${{ parameters.crux_templates }}/mocks/step.jmeter_tests.yaml@crux
        - template: ${{ parameters.crux_templates }}/mocks/step.workbooks_upload.yaml@crux
        - template: ${{ parameters.crux_templates }}/mocks/step.archive_jmeter_report.yaml@crux
        - template: ${{ parameters.crux_templates }}/mocks/step.archive_jmeter_results.yaml@crux
        - template: ${{ parameters.crux_templates }}/mocks/step.archive_jmeter_log.yaml@crux
        - template: ${{ parameters.crux_templates }}/mocks/step.archive_jmeter_errors.yaml@crux
        - template: ${{ parameters.crux_templates }}/mocks/step.archive_jmeter_server_logs.yaml@crux
        - template: ${{ parameters.crux_templates }}/mocks/step.junit.yaml@crux
        - template: ${{ parameters.crux_templates }}/mocks/step.junit_publish.yaml@crux
        - template: ${{ parameters.crux_templates }}/mocks/step.delete_namespace.yaml@crux
        - template: ${{ parameters.crux_templates }}/mocks/step.delete_cluster.yaml@crux

  #RUN on framework tests
  - ${{ if eq(parameters.mode, 'tests') }}:
    - template: ${{ parameters.crux_templates }}/tests/jobs/run_bats_modules_tests.yaml@crux
    - template: ${{ parameters.crux_templates }}/tests/jobs/run_pester_modules_tests.yaml@crux
    - template: ${{ parameters.crux_templates }}/tests/jobs/test_docker_images.yaml@crux
    - template: ${{ parameters.crux_templates }}/build/jobs/build_and_push_docker.yaml@crux
